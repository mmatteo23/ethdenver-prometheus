import { useState, useEffect, useRef } from "react";
import { ForceGraph2D } from "react-force-graph";
import type { ForceGraphMethods } from "react-force-graph-2d";
import * as d3 from "d3";

import csvData from "../../assets/d3-dependencies.csv?url";

const attestationData = [
  {
    id: "0x000000000000000000000000000000000000000000000000000000000000173d",
    schemaId:
      "0x0bccab24e4b6b6cc2a71e6bc2874c4d76affaafd28715328782ebb4397e380dd",
    replacedBy:
      "0x0000000000000000000000000000000000000000000000000000000000000000",
    attester: "0xf5d22aca7c503105022d4e42b8eb5d3d926a26b5",
    portal: "0x6ae91f2e1657a86aabd186e7c3525bc617ce54ce",
    attestedDate: 1709325315,
    expirationDate: 1735245300,
    revocationDate: 0,
    version: "17",
    revoked: false,
    subject: "0xf5d22aca7c503105022d4e42b8eb5d3d926a26b5",
    attestationData:
      "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000000a50726f6d657468657573000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a30786635643232616361376335303331303530323264346534326238656235643364393236613236623500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a30783639396430344639393934663138314633453331304637306346366143384538343435614365394100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d476c692053636f70706961746900000000000000000000000000000000000000",
    schemaString: "(string,string[],string",
    decodedData: ["TUPLE NOT SUPPORTED"],
    decodedPayload: [
      {
        projectName: "Prometheus",
        owners: [
          "0xf5d22aca7c503105022d4e42b8eb5d3d926a26b5",
          "0x699d04F9994f181F3E310F70cF6aC8E8445aCe9A",
        ],
        teamName: "Gli Scoppiati",
      },
    ],
  },
  {
    id: "0x000000000000000000000000000000000000000000000000000000000000173e",
    schemaId:
      "0x0bccab24e4b6b6cc2a71e6bc2874c4d76affaafd28715328782ebb4397e380dd",
    replacedBy:
      "0x0000000000000000000000000000000000000000000000000000000000000000",
    attester: "0xf5d22aca7c503105022d4e42b8eb5d3d926a26b5",
    portal: "0x6ae91f2e1657a86aabd186e7c3525bc617ce54ce",
    attestedDate: 1709325467,
    expirationDate: 1735245459,
    revocationDate: 0,
    version: "17",
    revoked: false,
    subject: "0xf5d22aca7c503105022d4e42b8eb5d3d926a26b5",
    attestationData:
      "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000054c696e65610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a307866356432326163613763353033313035303232643465343262386562356433643932366132366235000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d4c696e6561204e6574776f726b00000000000000000000000000000000000000",
    schemaString: "(string,string[],string",
    decodedData: ["TUPLE NOT SUPPORTED"],
    decodedPayload: [
      {
        projectName: "Linea",
        owners: ["0xf5d22aca7c503105022d4e42b8eb5d3d926a26b5", ""],
        teamName: "Linea Network",
      },
    ],
  },
  {
    id: "0x000000000000000000000000000000000000000000000000000000000000173f",
    schemaId:
      "0x0bccab24e4b6b6cc2a71e6bc2874c4d76affaafd28715328782ebb4397e380dd",
    replacedBy:
      "0x0000000000000000000000000000000000000000000000000000000000000000",
    attester: "0xf5d22aca7c503105022d4e42b8eb5d3d926a26b5",
    portal: "0x6ae91f2e1657a86aabd186e7c3525bc617ce54ce",
    attestedDate: 1709325470,
    expirationDate: 1735245459,
    revocationDate: 0,
    version: "17",
    revoked: false,
    subject: "0xf5d22aca7c503105022d4e42b8eb5d3d926a26b5",
    attestationData:
      "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000054c696e65610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a307866356432326163613763353033313035303232643465343262386562356433643932366132366235000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d4c696e6561204e6574776f726b00000000000000000000000000000000000000",
    schemaString: "(string,string[],string",
    decodedData: ["TUPLE NOT SUPPORTED"],
    decodedPayload: [
      {
        projectName: "XMTP",
        owners: ["0xf5d22aca7c503105022d4e42b8eb5d3d926a26b5", ""],
        teamName: "XMTP Protocol",
      },
    ],
  },
];

const attestationLinksData = [
  {
    subject:
      "0x000000000000000000000000000000000000000000000000000000000000173d",
    object:
      "0x000000000000000000000000000000000000000000000000000000000000173e",
  },
  {
    subject:
      "0x000000000000000000000000000000000000000000000000000000000000173e",
    object:
      "0x000000000000000000000000000000000000000000000000000000000000173d",
  },
];

const ForceGraph = () => {
  const [nodes, setNodes] = useState([]);
  const [links, setLinks] = useState([]);

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const ForceTree = ({ data }: { data: { nodes: any; links: any } }) => {
    const fgRef = useRef<ForceGraphMethods>();

    useEffect(() => {
      if (!fgRef.current) return;

      // add collision force
      fgRef.current.d3Force(
        "collision",
        d3.forceCollide((node) => Math.sqrt(100 / (node.level + 1)))
      );
    }, []);

    return (
      <ForceGraph2D
        ref={fgRef}
        graphData={data}
        //dagMode={"radialout"}
        dagLevelDistance={300}
        backgroundColor="#242430"
        linkColor={() => "rgba(255,255,255,0.2)"}
        nodeRelSize={1}
        nodeId="path"
        nodeVal={(node) => 100 / (node.level + 1)}
        nodeLabel="path"
        nodeAutoColorBy="module"
        linkDirectionalParticles={2}
        linkDirectionalParticleWidth={2}
        d3VelocityDecay={0.3}
        height={550}
        maxZoom={2}
        minZoom={0.5}
      />
    );
  };

  useEffect(() => {
    const nodes = [];
    const links = [];
    attestationData.forEach((attestation) => {
      const node = {
        id: attestation.id,
        path: attestation.decodedPayload[0].projectName,
        module: 1,
        size: 10,
        level: 0,
      };
      nodes.push(node);
    });

    attestationLinksData.forEach((link) => {
      const sourceNode = nodes.find((node) => node.id === link.subject);
      const targetNode = nodes.find((node) => node.id === link.object);

      links.push({
        source: sourceNode.path,
        target: targetNode.path,
        module: 1,
        value: 1,
      });
    });
    setNodes(nodes);
    setLinks(links);
  }, []);

  return <ForceTree data={{ nodes, links }} />;
};
export default ForceGraph;
